.menuBackground {
  position: absolute;
  width: 5000px;
  height: 5000px;
  top: calc( -2500px + 36px ); // Center of burger
  left: calc( -2500px + 42px ); // Center of burger
  background: rgba($color-base-lighter-7, 0.98);
  border-radius: 100%;
  pointer-events: auto;
  z-index: $zindex-menuBackground;
  opacity: 1;
  transform: scale3d(1, 1, 1);
  transform-origin: center;
  transition: transform 2000ms cubic-bezier(0.23, 1, 0.32, 1); // ease-out-quint
  border: 2px solid $color-base-lighter-4;

  @include breakpoint( 'belowTablet' ) {
    top: auto;
    bottom: calc( -2000px + 43px ); // Center of burger
    left: calc( -2000px + 30px ); // Center of burger
  }

  @include breakpoint( 'mobile' ) { bottom: calc( -2000px + 32px ); } // Center of burger

  &-hidden {
    transition: opacity 200ms 400ms ease-out, transform 400ms ease-in;
    pointer-events: none;
    opacity: 0;
    transform: scale3d(0, 0, 0);
  }
}

.menu {
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  z-index: $zindex-menuContent;
  opacity: 1;
  pointer-events: auto;
  transition: opacity 200ms 200ms ease-out;

  &-hidden {
    transition: opacity 200ms ease-out;
    pointer-events: none;
    opacity: 0;
  }

  &_inner {
    max-height: 100vh;
    overflow-y: scroll;
    overflow-x: hidden;

    padding: $scale-6-1 0 $scale-6-1 $scale-8-1;
    @include breakpoint( 'belowDesktop' ) { padding: $scale-2-1; }
    padding-top: 55px !important;
    @include breakpoint( 'belowTablet' ) { padding-top: $scale-2-1 !important; }

    margin: 0 0 0 auto;

    &::-webkit-scrollbar { width: 4px; }
    &::-webkit-scrollbar-track { background: $color-base-lighter-5; }
    &::-webkit-scrollbar-thumb { background: $color-base; }

    ul { list-style: none; }

    a {
      color: $color-base;
      font-weight: 600;
      font-size: $fontSize-base;
      transition: opacity 200ms ease-out;

      &:hover { opacity: 0.5; }
    }

    .level {
      position: relative;
      margin-top: $scale;
      padding-left: $scale-2-1;
      @include breakpoint( 'mobile' ) { padding-left: $scale; }
      transition: max-height 3000ms cubic-bezier(0.25, 0.75, 0.25, 1), opacity 200ms 300ms ease-out;
      max-height: 1000px;
      opacity: 1;

      &-closed {
        position: absolute;
        max-height: 0;
        opacity: 0;
        overflow: hidden;
        transition: none;
      }

      &-1 {
        margin-top: 0;
        & > li { margin-bottom: $scale;
          & > a { font-size: $fontSize-xxlarge; }
        }
      }

      &-2 {
        margin-bottom: $scale-3-1;
        @include breakpoint( 'mobile' ) { padding-left: $scale-2-1; }
        & > li {
          position: relative;
          padding-bottom: $scale-1-2;
        }
      }

      &-3 {
        & > li {
          position: relative;
          padding-bottom: $scale-1-2;
          a { font-weight: 400; }
        }
      }

      &-4 { margin-top: $scale;

        li {
          position: relative;
          padding-bottom: $scale;

          a {
            position: relative;
            font-weight: 400;
            display: flex;
            align-items: center;

            &.active {
              font-weight: 600;
              &:after {
                @extend .label;
                @extend .label-base;
                @extend .label-current;
                right: -$scale-1-2 !important;
                @include breakpoint( 'belowDesktop' ) { right: 0 !important; }
                top: -2px !important;
                transform: translateX(100%);
                white-space: nowrap;
                @include breakpoint( 'belowTablet' ) {
                  transform: rotate( 90deg ) translateY( -300% );
                  top: 50% !important;
                }
              }
            }
          }
        }
      }
    }
  }
}

$progressDotHeight: 11px;
$progressDotTop: 3px;

.progressDot {
  position: absolute;
  width: $progressDotHeight;
  height: $progressDotHeight;
  left: -24px;
  top: $progressDotTop;
  border-radius: 50%;
  border: 1px solid $color-base-lighter-5;
  overflow: hidden;
  z-index: 1; /* This makes overflow: hidden; actually apply for this element that has also border-radius applied to it. In Chrome. */

  &_fill {
    position: absolute;
    top: 100%;
    width: 100%;
    height: 100%;
    background-color: $color-base-lighter-5;
  }
}

.level {
  li {
    &[completion="0"] { & > .progressDot { & .progressDot_fill { top: 100%; } } }
    &[completion="10"] { & > .progressDot { & .progressDot_fill { top: 90%; } } }
    &[completion="20"] { & > .progressDot { & .progressDot_fill { top: 80%; } } }
    &[completion="30"] { & > .progressDot { & .progressDot_fill { top: 70%; } } }
    &[completion="40"] { & > .progressDot { & .progressDot_fill { top: 60%; } } }
    &[completion="50"] { & > .progressDot { & .progressDot_fill { top: 50%; } } }
    &[completion="60"] { & > .progressDot { & .progressDot_fill { top: 40%; } } }
    &[completion="70"] { & > .progressDot { & .progressDot_fill { top: 30%; } } }
    &[completion="80"] { & > .progressDot { & .progressDot_fill { top: 20%; } } }
    &[completion="90"] { & > .progressDot { & .progressDot_fill { top: 10%; } } }
    &[completion="100"] {
      & > .progressDot {
        background-color: $color-primary;
        border-color: $color-primary;
        & .progressDot_fill { display: none; }
      }
    }
  }
  // These rules makes sure that a connector is shown if the first lesson or task on a list with .level-withConnector is completed and for every completed lesson/task that follows this directly
  // If a lesson/task is completed but there is uncompleted lessons/tasks before it (in the same list), it will NOT get a connector
  &-withConnector {
    & > li[completion="100"] > .progressDotConnector { display: block; }
    & li:not([completion="100"]) ~ li > .progressDotConnector { display: none; }
    // & li.streak > .progressDotConnector { display: block; } // For the alternative JavaScript implementation if it will be used instead
  }
}

$progressDotConnectorSpacing: $progressDotTop + $progressDotHeight + $progressDotTop;

.progressDotConnector {
  display: none;
  position: absolute;
  left: -19px;
  top: $progressDotConnectorSpacing;
  width: 1px;
  height: calc( 100% - #{$progressDotConnectorSpacing} );
  min-height: 9px;
  background-color: $color-primary;
}

// li:last-child .progressDotConnector { display: none !important; } // Deleted as Jens uses JavaScript to hide this connector instead
