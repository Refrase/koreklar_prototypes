$positions: '-top' '-right' '-bottom' '-left' ''; // One left blank for the clean .padding/.margin (all sides) option

@each $position in $positions {
	.padding#{$position}-8-1 { padding#{$position}: $scale-8-1 !important; }
	.padding#{$position}-7-1 { padding#{$position}: $scale-7-1 !important; }
	.padding#{$position}-6-1 { padding#{$position}: $scale-6-1 !important; }
	.padding#{$position}-5-1 { padding#{$position}: $scale-5-1 !important; }
	.padding#{$position}-4-1 { padding#{$position}: $scale-4-1 !important; }
	.padding#{$position}-3-1 { padding#{$position}: $scale-3-1 !important; }
	.padding#{$position}-2-1 { padding#{$position}: $scale-2-1 !important; }
	.padding#{$position} 	   { padding#{$position}: $scale !important; }
	.padding#{$position}-1-2 { padding#{$position}: $scale-1-2 !important; }
	.padding#{$position}-1-3 { padding#{$position}: $scale-1-3 !important; }
	.padding#{$position}-1-4 { padding#{$position}: $scale-1-4 !important; }
	.padding#{$position}-1-5 { padding#{$position}: $scale-1-5 !important; }
	.padding#{$position}-1-6 { padding#{$position}: $scale-1-6 !important; }
	.padding#{$position}-1-7 { padding#{$position}: $scale-1-7 !important; }
	.padding#{$position}-1-8 { padding#{$position}: $scale-1-8 !important; }}

.padding-none { padding: 0 !important;
	&-top 	    { padding-top: 0 !important; }
	&-bottom    { padding-bottom: 0 !important; }}

@each $position in $positions {
	.margin#{$position}-8-1  { margin#{$position}: $scale-8-1 !important; }
	.margin#{$position}-7-1  { margin#{$position}: $scale-7-1 !important; }
	.margin#{$position}-6-1  { margin#{$position}: $scale-6-1 !important; }
	.margin#{$position}-5-1  { margin#{$position}: $scale-5-1 !important; }
	.margin#{$position}-4-1  { margin#{$position}: $scale-4-1 !important; }
	.margin#{$position}-3-1  { margin#{$position}: $scale-3-1 !important; }
	.margin#{$position}-2-1  { margin#{$position}: $scale-2-1 !important; }
	.margin#{$position} 		 { margin#{$position}: $scale !important; }
	.margin#{$position}-desktop { @include breakpoint( 'desktop' ) { margin#{$position}: $scale !important; }}
	.margin#{$position}-1-2  { margin#{$position}: $scale-1-2 !important; }
	.margin#{$position}-1-3  { margin#{$position}: $scale-1-3 !important; }
	.margin#{$position}-1-4  { margin#{$position}: $scale-1-4 !important; }
	.margin#{$position}-1-5  { margin#{$position}: $scale-1-5 !important; }
	.margin#{$position}-1-6  { margin#{$position}: $scale-1-6 !important; }
	.margin#{$position}-1-7  { margin#{$position}: $scale-1-7 !important; }
	.margin#{$position}-1-8  { margin#{$position}: $scale-1-8 !important; }}

.margin-none  { margin: 0 !important;
	&-top 	    { margin-top: 0 !important; }
	&-bottom    { margin-bottom: 0 !important; }
	&-desktop   { @include breakpoint( 'desktop' ) { margin: 0 !important; }}}

.font {
	&Size {
		&-display { font-size: $fontSize-display; }
		&-xxxlarge { font-size: $fontSize-xxxlarge; }
		&-xxlarge { font-size: $fontSize-xxlarge; }
		&-xlarge { font-size: $fontSize-xlarge; }
		&-large { font-size: $fontSize-large; }
		&-base { font-size: $fontSize-base; }
		&-small { font-size: $fontSize-small; }
		&-xsmall { font-size: $fontSize-xsmall; }
		&-xxsmall { font-size: $fontSize-xxsmall; }}
	&Family {
		&-system { font-family: $fontFamily-system !important; }}
	&Weight {
		&-bold { font-weight: 600 !important; }}}

.text {
	&Transform {
		&-uppercase { text-transform: uppercase; }
	}
	&Align {
		&-center { text-align: center; }
	}
}

.letter {
	&Spacing { letter-spacing: 0.4px; }
}

.color {
  &-primary { color: $color-primary !important; }
	&-dismiss { color: $color-dismiss !important; }
	&-base { color: $color-base !important;
		&-lighter {
		  &-1 { color: $color-base-lighter-1; }
			&-2 { color: $color-base-lighter-2; }
			&-3 { color: $color-base-lighter-3; }
			&-4 { color: $color-base-lighter-4; }
			&-5 { color: $color-base-lighter-5; }
			&-6 { color: $color-base-lighter-6; }
			&-7 { color: $color-base-lighter-7; }}}}

.display {
	&-none { display: none !important; }
	&-flex { display: flex;
		&-aboveMobile {
			@include breakpoint( 'mobileAbove' ) { display: flex; }
		}
	}
	&-block { display: block; }
	&-inlineBlock { display: inline-block; }}

.opacity {
	&-0 { opacity: 0; }
}

.justifyContent {
	&-center { justify-content: center; }
	&-spaceBetween { justify-content: space-between; }
	&-spaceAround { justify-content: space-around; }}

.alignItems {
	&-flexEnd { align-items: flex-end; }
	&-center { align-items: center; }}

.flex {
	&Wrap { flex-wrap: wrap; }
	&Direction {
		&-columnReverse { flex-direction: column-reverse;
			&-belowDesktop { @include breakpoint( 'belowDesktop' ) { flex-direction: column-reverse; }}
		}
	}
}

.width		{
	&-full  { width: 100% }
	&-fill  { // Counter spacing the grid for covering margins defined by grid. ATT! Depending on grid side paddings as they are
		&-right	{
			@include breakpoint( 'desktop' ){
				width: calc( 100% + #{$scale-4-1} ) !important;
			}
			@include breakpoint( 'belowDesktop' ) {
				width: calc( 100% + #{$scale-4-1} ) !important;
				margin-left: -$scale-6-1 !important;
				margin-right: 0 !important;
			}
			@include breakpoint( 'belowTablet' ) {
				width: calc( 100% + #{$scale-8-1} ) !important;
				margin-left: -$scale-2-1 !important;
				margin-right: 0 !important;
			}
			@include breakpoint( 'widescreen' ){
				width: calc( 100% + #{$scale-8-1} ) !important;
			}
			@include breakpoint( 'extraWidescreen' ) {
				width: auto !important;
			}
		}
	}
}

.height {
	&-full { height: 100%; }}

.background {
	&Color {
		&-white { background-color: white; }
		&-primary { background-color: $color-primary; }
		&-base { background-color: $color-base;
			&-lighter { background-color: $color-base-lighter-7; }}}

	&-pattern {
		&:after {
			content: '';
			position: absolute;
			bottom: 0;
			right: 0;
			width: 100vw;
			height: 100vh;
			z-index: -1;
			background-image: url('assets/illu_streger.svg');
			background-repeat: no-repeat;
			background-size: cover;
			background-position: 0 150px; }

		&-dimmed {
			&:after { opacity: 0.5; }}

		&-subtle {
			&:after { opacity: 0.05; }}

		&-white {
			&:after { background-image: url('assets/illu_streger_hvid.svg'); }}

		&-base {
			&:after { background-image: url('assets/illu_streger_base.svg'); }}
	}
	&-full {
		&::before {
			content: '';
			position: absolute;
			height: 100%;
			width: 200vw;
			background-color: inherit;
			top: 0;
			left: -100%;
			z-index: -1;
		}
	}
}

.list {
	&-unstyled { list-style: none; }}

.border {
	&-top {
		&-base {
			&-lighter {
				&-tablet { @include breakpoint( 'belowTablet' ) { border-top: 1px solid $color-base-lighter-6; } }
			}
		}
	}
}

.position {
	&-relative { position: relative !important; }
	&-absolute { position: absolute !important; }
	&-fixed { position: fixed !important;
		&-bottom { bottom: 0;
			&-mobile { @include breakpoint( 'mobile' ) { position: fixed !important; } }
			&-tablet { @include breakpoint( 'belowTablet' ) { position: fixed !important; } }
		}
	}
}

.overflow {
	&-hidden { overflow: hidden; }
}

// Animation
@keyframes fadeIn {
	0%   { opacity: 0; }
	100% { opacity: 1; }
}

.fadeIn {
	animation: fadeIn ease-out forwards;
	animation-duration: 300ms;
	&-slow { animation-duration: 600ms; }
}

@keyframes slideDown {
	0%   { opacity: 0; transform: translate3d(0,-20px,0); }
	100% { opacity: 1; transform: translate3d(0,0,0); }
}

.slideDown {
	animation: slideDown cubic-bezier(0.25, 0.75, 0.25, 1) forwards;
	animation-duration: 600ms;
	&-fast { animation-duration: 300ms; }
	&-slow { animation-duration: 1200ms; }
}

.stackable {
	position: absolute;
	top: 0;
	left: 0;
}

// Triggering scroll on y-axis, when controlBar is visible
.visibleControlBar {
	padding-bottom: 180px !important; // Making sure bottom content is visible on all screensizes
}
